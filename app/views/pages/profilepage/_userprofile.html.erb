<%# if user has an avatar it shows their avatar%>
<%if current_user.avatar.attached? %>
  <%= content_tag(:div,image_link_to(current_user.avatar,profilepage_edit_path, {:alt => "usericon",id:"profilechangeimage"})+content_tag(:p,t('profilepage.changeavatar')),id:"editableusericon") %>
<%else%>
  <%# If they don't have an avatar it defaults to the default_user.svg%>
  <%= content_tag(:div,image_link_to("default_user.svg",profilepage_edit_path, {:alt => "usericon",id:"profilechangeimage"})+content_tag(:p,t('profilepage.changeavatar')),id:"editableusericon") %>
<%end%>
<div class = "gridcontainer pet">
  <%= content_tag :h3, t('profilepage.addpet') %>
  <%# This form handles adding a new pet, it passes the params back to the controller, where the pet's data is saved to the database.%>
  <%# The page is automatically updated with the new pet object with all it's details once submit is pressed%>
  <%# validation is performed on the fields to make sure no erronous data is sent to the database%>
  <%= form_with :url => pets_create_path(@pet), class: "addpet" do |f| %>
    <%= f.text_field :name,:required => true,placeholder:t('profilepage.name') %>
    <%= f.text_field :species,:required => true,placeholder:t('profilepage.species') %>
    <%= f.file_field :avatar,:required => true %>
    <%= f.submit t('profilepage.submit'),class: "submitbtn" %>
  <% end %>
  <%= content_tag :p, t('profilepage.warning') %>
</div>
<%# This segment handles displaying the user's pets, and shows a new pet the moment the submit button is pressed%>
<%= content_tag(:div,"pets", class:"petsContainer") do %>
  <% current_user.pets.each do |pet| %>
    <% if pet.avatar.attached? %>
      <div>
        <%= content_tag :h3, pet.name %>
        <%=image_tag(pet.avatar,{:alt => "pet_icon",class:"petimage"})%>
      </div>
    <% end %>
  <% end %>
<% end %>
